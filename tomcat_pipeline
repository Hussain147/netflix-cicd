pipeline {
    agent any

    tools {
        // Define the Maven tool installation
        maven 'maven'
    }
    stages {
        stage('Checkout') {
            steps {
                script {
                    checkout([$class: 'GitSCM', branches: [[name: '*/main']], userRemoteConfigs: [[url: 'https://github.com/betawins/hiring-app.git']]])
                }
            }
        }

        stage('Installing Maven Build Tool') {
            steps {
                script {
                    sh 'wget https://mirrors.estointernet.in/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz'
                    sh 'tar -zxvf apache-maven-3.6.3-bin.tar.gz'
                }
            }
        }

        stage('Compiling Application') {
            steps {
                script {
                    dir('/var/lib/jenkins/workspace/pipeline') {
                        sh '/var/lib/jenkins/workspace/pipeline/apache-maven-3.6.3/bin/mvn compile'
                        sh '/var/lib/jenkins/workspace/pipeline/apache-maven-3.6.3/bin/mvn clean install'
                    }
                }
            }
        }

        stage('Testing Application') {
            steps {
                script {
                    dir('/var/lib/jenkins/workspace/pipeline') {
                        sh '/var/lib/jenkins/workspace/pipeline/apache-maven-3.6.3/bin/mvn test'
                    }
                }
            }
        }

        stage('Sonar Analysis') {
            environment {
                scannerHome = tool 'sonar4.7'
            }

            steps {
              withSonarQubeEnv('sonar') {
                  sh '''${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=hiring \
                  -Dsonar.projectName=hiring \
                  -Dsonar.projectVersion=1.0 \
                  -Dsonar.sources=src/ \
                  '''
                    }
                }
        }
        
        stage('Packaging Application') {
            steps {
                script {
                    dir('/var/lib/jenkins/workspace/pipeline') {
                        sh '/var/lib/jenkins/workspace/pipeline/apache-maven-3.6.3/bin/mvn package'
                    }            
                }
            }
        }
        
        stage('Uploading Artifact To Nexus'){
            steps{
                nexusArtifactUploader(
                  nexusVersion: 'nexus3',
                  protocol: 'http',
                  nexusUrl: '172.31.84.63:8081',
                  groupId: 'Dev',
                  version: "v${env.BUILD_ID}",
                  repository: 'hiring-repo',
                  credentialsId: 'nexus_login',
                  artifacts: [
                    [artifactId: 'hiring-web',
                     classifier: '',
                     file: '/var/lib/jenkins/workspace/pipeline/target/hiring.war',
                     type: 'war']
                ]
            )
            }
        }
        
        stage('deploying App on Tomcat') {
            steps{
                sshagent(['tomcat-ssh']) {
                    sh "scp -o StrictHostKeyChecking=no /var/lib/jenkins/workspace/pipeline/target/hiring.war ubuntu@34.226.192.136:/opt/apache-tomcat-8.5.96/webapps"
            }
            }
            
        }
    }
}
